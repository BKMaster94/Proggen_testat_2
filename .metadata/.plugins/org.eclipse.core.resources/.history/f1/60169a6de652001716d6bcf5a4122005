//////////////////////////////////////////////////////////////////////////////
//Variablen Initialisierung 
//////////////////////////////////////////////////////////////////////////////
var express = require('express'); // Express wird initialisert
var appServer = express(); 
var server = appServer.listen(8081, function(){ // Server wird gestartet und Hört auf den Jeweiligen Port!
	console.log("Server gestartet auf Port: 8081");	// Consolen ausgabe zur überprüfung ob der Server Startet
});
var io = require('socket.io').listen(server); // IO wird aufgesetzt auf das http.server Objekt
var bodyParser = require('body-parser'); // Initialisierung des Body-Parsers
var path = require('path'); // Lokale Path Variable für die Dateisuche 
var ClientZaehler = 0; // Zählt wie viele Clients auf dem Server zugreifen über Socket.io
var TempSpielerName = "empty"; // Temporärer Namens Halter für den Client
var wertDrin = [false,false,false,false,false,false,false,false,false]; // Switch für häufigkeit des Klickens | JA ist nicht optimal :)
var spieler1= null; // Wird benutzt um den Namen von Spieler1 weiter zu geben
var spieler2= null; // Wird benutzt um den Namen von Spieler2 weiter zu geben
var SpielerFeldID = [null,null,null,null,null,null,null,null,null]; // Hier wird die ID vom Jeweiligen Spieler eingetragen der ein Feld anklickt // Dient zur Gewinn Suche!
var zeichenXO = "";//Das Zeichen "X" oder "O" im normalfall
var zuege = 0;//anzahl der schon gemachten Zuege
var i = 0;
//////////////////////////////////////////////////////////////////////////////
//Variablen Initialisierung ENDE
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//Body-Parser
//////////////////////////////////////////////////////////////////////////////
appServer.use(bodyParser.urlencoded({ // brauchen wir für das Parsen vom Request body block
	extended: true 
}));
//////////////////////////////////////////////////////////////////////////////
//Body-Parser ENDE
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//Socket.IO Block!
//////////////////////////////////////////////////////////////////////////////
	io.on('connection', function(client){ // die Verbindung wird hergestellt zwischen server und Client.
		client.on('username', function() { // Beim emit von 'username' wird der client getzwungen einen usernamen anzunehemen. // Falls keiner exestiert === 'emtpy';
			client.username = TempSpielerName; // Name wird zugewiesen und kann von jetzt aus drauf zugegriffen werden mit client.username
			
			ClientZaehler = ClientZaehler +1; // Da ein Client jetzt connectet ist wird der Zähler erhöht
			if(ClientZaehler <= 2 ){
				client.join('SpielRaum');
				//console.log("Client: " + client.username + " ist nun im SpieleRaum");
				if (ClientZaehler === 1){

					
					
					
					client.id = Math.round(Math.random());
					if (client.id === 0){
						spieler1 = client.username;
					}
					if(client.id === 1){
						spieler2 = client.username;
					}

					console.log("Spieler1: " +spieler1+ " || Spieler2: " + spieler2);
					console.log("Spieler: " + client.id + " | Spilername: " + client.username);
				}
				if(ClientZaehler === 2){				
					console.log("Spieler1: " +spieler1+ " || Spieler2: " + spieler2);
					
					if(spieler1 === null){
						spieler1 = client.username;
						client.id = 0;						
					}
					if(spieler2 === null){
						spieler2 = client.username;
						client.id = 1;
					}
					
					
					console.log("Spieler: " + client.id + " | Spilername: " + client.username);
					
					io.to('SpielRaum').emit('SpielerName1', spieler1);
					io.to('SpielRaum').emit('SpielerName2', spieler2);
					spieler1=null;
					spieler2=null;
				}
				io.to('SpielRaum').emit('gameReady', ClientZaehler);

			}
			
			console.log('A user is Connectet: ' + client.username + " | ID: " + client.id);
			client.on('disconnect', function(){
				ClientZaehler--;
				console.log("Client disconnected: " + client.username + " | ID: " + client.id);
				console.log("Momentane user: " + ClientZaehler);
			});
			console.log("Momentane user: " + ClientZaehler);
	    });
		

		//Wurde Geklicked und nun wird ein Zeichen zum client gescchickt
		// VIELE ABFRAGEN jedes Feld hat seine eigene abfrage
		client.on('S1Z_Eins', function(){//Es wurde das Feld .. clicked
			
		if(client.id === zuege%2){ //  wenn die id des Spielers gleich der zuege modulo 2 ist... somit immer abwechselnd
//			console.log("S1Z_Eins im server angekommen");
			if(wertDrin[0] === false){
			
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[0] = true;
				SpielerFeldID[0] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[0] = true;
				SpielerFeldID[0] = 1;
			}
			zuege++; //
			io.emit('S1Z_EinsEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S1Z_Zwei', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S1Z_Zwei im server angekommen");
			if(wertDrin[1] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[1] = true;
				SpielerFeldID[1] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[1] = true;
				SpielerFeldID[1] = 1;
			}
			zuege++;
			io.emit('S1Z_ZweiEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S1Z_Drei', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S1Z_Drei im server angekommen");
			if(wertDrin[2] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[2] = true;
				SpielerFeldID[2] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[2] = true;
				SpielerFeldID[2] = 1;
			}
			zuege++;
			io.emit('S1Z_DreiEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S2Z_Eins', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S2Z_Eins im server angekommen");
			if(wertDrin[3] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[3] = true;
				SpielerFeldID[3] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[3] = true; 
				SpielerFeldID[3] = 1;
			}
			zuege++;
			io.emit('S2Z_EinsEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S2Z_Zwei', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S2Z_Zwei im server angekommen");
			if(wertDrin[4] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[4] = true;
				SpielerFeldID[4] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[4] = true;
				SpielerFeldID[4] = 1;
			}
			zuege++;
			io.emit('S2Z_ZweiEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S2Z_Drei', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S2Z_Drei im server angekommen");
			if(wertDrin[5] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[5] = true;
				SpielerFeldID[5] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[5] = true;
				SpielerFeldID[5] = 1;
			}
			zuege++;
			io.emit('S2Z_DreiEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S3Z_Eins', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S3Z_Eins im server angekommen");
			if(wertDrin[6] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[6] = true;
				SpielerFeldID[6] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[6] = true;
				SpielerFeldID[6] = 0;
			}
			zuege++;
			io.emit('S3Z_EinsEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S3Z_Zwei', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S3Z_Zwei im server angekommen");
			if(wertDrin[7] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[7] = true;
				SpielerFeldID[7] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[7] = true;
				SpielerFeldID[7] = 1;
			}
			zuege++;
			io.emit('S3Z_ZweiEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		client.on('S3Z_Drei', function(){//Es wurde das Feld .. clicked

		if(client.id === zuege%2){
//			console.log("S3Z_Drei im server angekommen");
			if(wertDrin[8] === false){
			if(zuege%2===0){
				zeichenXO = "X"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[8] = true;
				SpielerFeldID[8] = 0;
			}
			else{
				zeichenXO = "O"; // Das Zeichen des Spielers wird weiter gegeben
				wertDrin[8] = true;
				SpielerFeldID[8] = 1;
			}
			zuege++;
			io.emit('S3Z_DreiEmiter', zeichenXO);
			}
			//console.log("Wir sind bei Zug: " + zuege);
		}
	});
		
		client.on('WennGewonnen', function(){
			console.log("Wir sind bei Zug: " + zuege);
			if(zuege > 4){
				console.log("Suche Gewinner");
				console.log(" 0: " + SpielerFeldID[0] + " 1: " + SpielerFeldID[1] + " 2: " + SpielerFeldID[2] + " 3: " + SpielerFeldID[3] + " 4: " + SpielerFeldID[4] + " 5: " + SpielerFeldID[5] + " 6: " + SpielerFeldID[6] + " 7: " + SpielerFeldID[7] + "8: " + SpielerFeldID[8]);
				if(SpielerFeldID[0] === 1 && SpielerFeldID[1] === 1 && SpielerFeldID[2] === 1 || SpielerFeldID[2] === 0 && SpielerFeldID[1] === 0 && SpielerFeldID[0] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[0]+1);
				}
				if(SpielerFeldID[6] === 1 && SpielerFeldID[7] === 1 && SpielerFeldID[8] === 1 || SpielerFeldID[6] === 0 && SpielerFeldID[7] === 0 && SpielerFeldID[8] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[6]+1);
				}
				if(SpielerFeldID[0] === 1 && SpielerFeldID[3] === 1 && SpielerFeldID[6] === 1 || SpielerFeldID[0] === 0 && SpielerFeldID[3] === 0 && SpielerFeldID[6] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' ,  SpielerFeldID[0]+1);
				}
				if(SpielerFeldID[2] === 1 && SpielerFeldID[5] === 1 && SpielerFeldID[8] === 1 || SpielerFeldID[2] === 0 && SpielerFeldID[5] === 0 && SpielerFeldID[8] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[2]+1);
				}
				if(SpielerFeldID[0] === 1 && SpielerFeldID[4] === 1 && SpielerFeldID[8] === 1 || SpielerFeldID[0] === 0 && SpielerFeldID[4] === 0 && SpielerFeldID[8] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[0]+1);
				}
				if(SpielerFeldID[2] === 1 && SpielerFeldID[4] === 1 && SpielerFeldID[6] === 1 || SpielerFeldID[2] === 0 && SpielerFeldID[4] === 0 && SpielerFeldID[6] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[2]+1);
				}
				if(SpielerFeldID[3] === 1 && SpielerFeldID[4] === 1 && SpielerFeldID[5] === 1 || SpielerFeldID[3] === 0 && SpielerFeldID[4] === 0 && SpielerFeldID[5] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[3]+1);
				}
				if(SpielerFeldID[1] === 1 && SpielerFeldID[4] === 1 && SpielerFeldID[7] === 1 || SpielerFeldID[1] === 0 && SpielerFeldID[4] === 0 && SpielerFeldID[6] === 0 ){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , SpielerFeldID[1]+1);
				}
				if(zuege === 9){
					zuege = 0;
					for(i=0;i < SpielerFeldID.length;i++){
						SpielerFeldID[i] = null;		
						wertDrin[i] = false;
					}
					io.emit('Gewonnen' , 'Unentschieden');
				}
			}
		});
	});
//////////////////////////////////////////////////////////////////////////////
//Socket.IO Block! || ENDE
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//Node Route
// req = Request || res = Respond
//////////////////////////////////////////////////////////////////////////////
appServer.get('/', function(req,res){ // Url Abfangen 
	res.sendFile(path.resolve('HTML/Anmeldung.html')); // Nimm die HTML Datei aus dem Ordner
});

appServer.get('/Ajax/testAuslagerung.js', function(req,res){ // URL Abfangen
	res.sendFile(path.resolve('Ajax/testAuslagerung.js')); // Lade die Javascript datei ein.
});

appServer.get('/CSS/StyleIndex.css', function(req,res){ // URL Abfangen
	res.sendFile(path.resolve('CSS/StyleIndex.css')); // Lade die CSS datei ein.
});

appServer.post('/SpielerNamenBekommen', function (req,res){ //der SpielerName wird durch ein JSON an den server geschickt
	res.status(200).json(req.body);//Der Status "Success" wird übergeben und ein json Obj wird zurückgeschickt
	TempSpielerName = req.body.player; // Wert es JSON Objektes wird in eine Variable geschrieben. // wird der Benutzername Des Clients mit Socket.io()
});

appServer.get('/TicTacToeSpiel', function (req,res){ // Die Momentane Seite soll gewaechselt werden
	res.sendFile(path.resolve('HTML/Index.html')); // Die Datei HTML/Index.html wird an den client geschickt
});
//////////////////////////////////////////////////////////////////////////////
//Node Route Ende
//////////////////////////////////////////////////////////////////////////////